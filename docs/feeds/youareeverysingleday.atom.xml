<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Coder - youareeverysingleday</title><link href="https://youareeverysingleday.github.io/" rel="alternate"></link><link href="https://youareeverysingleday.github.io/feeds/youareeverysingleday.atom.xml" rel="self"></link><id>https://youareeverysingleday.github.io/</id><updated>2023-08-11T00:00:00+02:00</updated><subtitle>You are every single day.</subtitle><entry><title>如何使用Pelican创建一个博客</title><link href="https://youareeverysingleday.github.io/pelican-brochure.html" rel="alternate"></link><published>2023-08-11T00:00:00+02:00</published><updated>2023-08-11T00:00:00+02:00</updated><author><name>youareeverysingleday</name></author><id>tag:youareeverysingleday.github.io,2023-08-11:/pelican-brochure.html</id><summary type="html">&lt;h2&gt;experience&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;常用命令，&lt;/li&gt;
&lt;li&gt;命令参考&lt;a href="https://www.osgeo.cn/pelican/"&gt;https://www.osgeo.cn/pelican/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;流程参考&lt;a href="https://zhuanlan.zhihu.com/p/614277442"&gt;https://zhuanlan.zhihu.com/p/614277442&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;pelican-quickstart&lt;/td&gt;
&lt;td&gt;填写pelican基本信息。后期可以通过pelicanconf.py修改。&lt;/td&gt;
&lt;td&gt;进入页面目 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2&gt;experience&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;常用命令，&lt;/li&gt;
&lt;li&gt;命令参考&lt;a href="https://www.osgeo.cn/pelican/"&gt;https://www.osgeo.cn/pelican/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;流程参考&lt;a href="https://zhuanlan.zhihu.com/p/614277442"&gt;https://zhuanlan.zhihu.com/p/614277442&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;pelican-quickstart&lt;/td&gt;
&lt;td&gt;填写pelican基本信息。后期可以通过pelicanconf.py修改。&lt;/td&gt;
&lt;td&gt;进入页面目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;pelican content&lt;/td&gt;
&lt;td&gt;生成网站。&lt;/td&gt;
&lt;td&gt;需要content目录下已经有按照规则撰写的markdown文档。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;pelican --listen&lt;/td&gt;
&lt;td&gt;打开新的终端会话，导航到项目根目录，然后运行以下命令以启动Pelican的web服务器。&lt;/td&gt;
&lt;td&gt;CTRL+C退出的时候反应会比较慢。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. 创建的markdown文档开头的格式及说明：&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;文章或页的标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;出版日期（例如。， YYYY-MM-DD HH:SS ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modified&lt;/td&gt;
&lt;td&gt;修改日期（例如。， YYYY-MM-DD HH:SS ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;内容标记，用逗号分隔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keywords&lt;/td&gt;
&lt;td&gt;内容关键字，用逗号分隔（仅限HTML内容）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;category&lt;/td&gt;
&lt;td&gt;内容类别（仅一个-不是多个）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;slug&lt;/td&gt;
&lt;td&gt;URL和翻译中使用的标识符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;author&lt;/td&gt;
&lt;td&gt;内容作者，当只有一个时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authors&lt;/td&gt;
&lt;td&gt;当有多个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;索引页内容简述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lang&lt;/td&gt;
&lt;td&gt;内容语言ID (en ， fr 等）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translation&lt;/td&gt;
&lt;td&gt;如果内容是另一个的翻译 (true 或 false ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;status&lt;/td&gt;
&lt;td&gt;内容状态： draft ， hidden 或 published&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;template&lt;/td&gt;
&lt;td&gt;用于生成内容的模板的名称（不带扩展名）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;save_as&lt;/td&gt;
&lt;td&gt;将内容保存到此相对文件路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;用于此文章/页面的URL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pelicanconf.py中的配置&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;STATIC_PATHS = ['images']&lt;/td&gt;
&lt;td&gt;通过上文，我们已经成功添加第一篇博客，但是很快会发现，如果你往content目录里面添加一个images文件夹存放博文的图片，你会发现pelican content并不会复制images文件夹到output目录下。这种不需要编译但又要用到的文件，我们称它为“静态文件”。pelican默认不会复制静态文件到output目录，需要我们在pelicanconf.py配置文件上面配置一下,添加该行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;SITEURL&lt;/td&gt;
&lt;td&gt;也要设置成Pages的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. pelican的模板&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1. 首先通过&lt;a href="https://pelicanthemes.com/"&gt;https://pelicanthemes.com/&lt;/a&gt;查看模板的样式，这个里面有粗略编译之后的样式，具体的需要看代码里面的展示。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. 通过&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;下载代码。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. 通过&lt;a href="https://www.osgeo.cn/pelican/pelican-themes.html"&gt;https://www.osgeo.cn/pelican/pelican-themes.html&lt;/a&gt;查看安装theme的命令。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. 将下载下来的模板代码拷贝到python安装库目录下的文件夹中。相对Python的目录为：Python\Lib\site-packages\pelican\themes。直接复制到该目录下之后，通过pelican-themes -v -l就可以看到安装好的模板了。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. 可以使用根目录下的某个文件夹作为github pages的发布路径。目前github pages只能使用docs/作为发布路径。。"Optionally, use the folder dropdown menu to select a folder for your publishing source."&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. publishconf.py和pelicanconf.py的区别？也就是说一般都在pelicanconf.py中进行配置。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1. 在publishconf.py中定义的内容将覆盖pelicanconf.py中的相同定义。作为Pelican设置文件首先将分为两部分，考虑两种主要的操作模式：本地开发和生产部署（分别为pelicanconf.py和publishconf.py）。不建议将GOOGLE_ANALYTICS从pelicanconf.py移动publishconf.py到。在本地开发时，Google Analytics 和 Disqus 等设置在设计上pelicanconf.py将被故意排除。pelicanconf.py在本地测试中包含这些设置可能会产生不利影响：不准确的站点统计数据、虚假评论线程以及其他意外的副作用。但请注意，publishconf.py仅在两种情况下使用：&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. 当您使用make publish（或其他 make 命令之一）生成站点时。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. 当您明确指定它作为要使用的配置文件时（即pelican -s publishconf.py content_dir）。因此，如果您使用命令生成站点pelican，并且没有明确指定您的配置文件，则只会pelicanconf.py使用；因此你需要将GOOGLE_ANALYTICS变量设置在那里。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. 注意publishconf.py和pelicanconf.py的区别。在pelicanconf.py中不要设置SITEURL，因为设置之后就会导致在本地调试的时候重新生成文章的链接是SITEURL设置的远程地址。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;problems&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;~~无法显示latex公式。~~&lt;/li&gt;
&lt;li&gt;解决这个问题的方法不是让pelican解决的，而是通过chrome插件来解决的。使用chrome的TeX All the Things插件就可以很好的显示所有页面中的latex公式。&lt;/li&gt;
&lt;li&gt;但是TeX All the Things插件对矩阵的表现非常差，mathjax的显示效果最好。&lt;/li&gt;
&lt;li&gt;gum样式没有显示category、page和~~tags~~。&lt;/li&gt;
&lt;li&gt;使用tags需要使用tag_cloud插件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;references&lt;/h2&gt;
&lt;h3&gt;放弃使用jekyll&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;简单页面部署&lt;a href="https://zhuanlan.zhihu.com/p/28321740"&gt;https://zhuanlan.zhihu.com/p/28321740&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;部署能解析markdown的blog&lt;a href="https://zhuanlan.zhihu.com/p/102346113"&gt;https://zhuanlan.zhihu.com/p/102346113&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;jekyll多种模板&lt;a href="http://jekyllthemes.org/"&gt;http://jekyllthemes.org/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;HTML5静态页面模板&lt;a href="https://html5up.net/"&gt;https://html5up.net/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;rtd模板&lt;a href="https://github.com/readthedocs/sphinx_rtd_theme"&gt;https://github.com/readthedocs/sphinx_rtd_theme&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;pelican&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;入门参考。它是使用python编译的，并且支持markdown。&lt;a href="https://zhuanlan.zhihu.com/p/55603083"&gt;https://zhuanlan.zhihu.com/p/55603083&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;重要参考2&lt;a href="https://zhuanlan.zhihu.com/p/614277442"&gt;https://zhuanlan.zhihu.com/p/614277442&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;这个参考更详细：&lt;a href="https://maxwell-nc.github.io/blog/pelicanBuildBlog.html"&gt;https://maxwell-nc.github.io/blog/pelicanBuildBlog.html&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;操作参考&lt;a href="https://jlhxxxx.github.io/pelican-github.html"&gt;https://jlhxxxx.github.io/pelican-github.html&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;中文pelican手册&lt;a href="https://www.osgeo.cn/pelican/plugins.html"&gt;https://www.osgeo.cn/pelican/plugins.html&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;需要添加pelican-plusin&lt;/li&gt;
&lt;li&gt;添加了assets始终报错：CRITICAL UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb2 in position 8: invalid     &lt;strong&gt;init&lt;/strong&gt;.py:566                    start byte&lt;/li&gt;
&lt;li&gt;模板参考：&lt;/li&gt;
&lt;li&gt;展示：&lt;a href="https://pelicanthemes.com/"&gt;https://pelicanthemes.com/&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;代码：&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;有几个备选的模板，其中选中&lt;a href="https://pelicanthemes.com/pelican-twitchy/"&gt;https://pelicanthemes.com/pelican-twitchy/&lt;/a&gt;。&lt;ol&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/gum/"&gt;https://pelicanthemes.com/gum/&lt;/a&gt;可以。首要备选。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/dev-random3/"&gt;https://pelicanthemes.com/dev-random3/&lt;/a&gt;可以，比较直接。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/relapse/"&gt;https://pelicanthemes.com/relapse/&lt;/a&gt;可以。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/mg/"&gt;https://pelicanthemes.com/mg/&lt;/a&gt;这个搜索框没有作用。还比较简洁。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/foundation-default-colours/"&gt;https://pelicanthemes.com/foundation-default-colours/&lt;/a&gt;可以。但是没有分类在两边。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/bootstrap/category/misc.html"&gt;https://pelicanthemes.com/bootstrap/category/misc.html&lt;/a&gt;可以。但是没有分类在两边。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pelicanthemes.com/notmyidea-cms-fr/"&gt;https://pelicanthemes.com/notmyidea-cms-fr/&lt;/a&gt;可以，主要是背景颜色不太喜欢。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;插件plugins：&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;。很多模板都需要安装了插件之后才能使用完整功能。&lt;/li&gt;
&lt;li&gt;markdown显示latex插件：&lt;a href="https://github.com/kitelife/pelican_plugin-latex/"&gt;https://github.com/kitelife/pelican_plugin-latex/&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;</content><category term="Commonknowledge"></category><category term="blog"></category><category term="pelican"></category></entry><entry><title>Python基础知识</title><link href="https://youareeverysingleday.github.io/python-foundation.html" rel="alternate"></link><published>2022-08-19T00:00:00+02:00</published><updated>2022-08-19T00:00:00+02:00</updated><author><name>youareeverysingleday</name></author><id>tag:youareeverysingleday.github.io,2022-08-19:/python-foundation.html</id><summary type="html">&lt;h2&gt;1 Python编程基础概念&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;5种基本对象类型。&lt;/li&gt;
&lt;li&gt;字符串：string，简记为str&lt;/li&gt;
&lt;li&gt;整数：integer，简记为int&lt;ol&gt;
&lt;li&gt;十进制&lt;/li&gt;
&lt;li&gt;八进制：0o100, -0o100&lt;/li&gt;
&lt;li&gt;十六进制：0x40, -0x40&lt;/li&gt;
&lt;li&gt;二进制：0b100000, -0b100000&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;浮点数：float&lt;/li&gt;
&lt;li&gt;布尔型：boolean，简记为bool，True …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2&gt;1 Python编程基础概念&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;5种基本对象类型。&lt;/li&gt;
&lt;li&gt;字符串：string，简记为str&lt;/li&gt;
&lt;li&gt;整数：integer，简记为int&lt;ol&gt;
&lt;li&gt;十进制&lt;/li&gt;
&lt;li&gt;八进制：0o100, -0o100&lt;/li&gt;
&lt;li&gt;十六进制：0x40, -0x40&lt;/li&gt;
&lt;li&gt;二进制：0b100000, -0b100000&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;浮点数：float&lt;/li&gt;
&lt;li&gt;布尔型：boolean，简记为bool，True, False。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复数：complex，1+2j, -1-1j&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;type()对象(函数)，用于查看对象的类型。不同类型对象的运算规则不同。不同类型的在计算机中的存储形式不一样。&lt;/li&gt;
&lt;li&gt;基础运算符&lt;/li&gt;
&lt;li&gt;算术运算符：+,-,&lt;em&gt;,/,//,%,**。&lt;/em&gt;&lt;em&gt;其中"//"表示的除法是整数除法，也就是小学时候使用的除法，结果得到商&lt;/em&gt;*，不包含余数。其中"**"表示的是指数运算。&lt;/li&gt;
&lt;li&gt;关系运算符：==, !=, &amp;gt;=, &amp;gt;, &amp;lt;, &amp;lt;=。&lt;/li&gt;
&lt;li&gt;逻辑运算符：and, or, not。&lt;/li&gt;
&lt;li&gt;运算符优先级&lt;/li&gt;
&lt;li&gt;input和print对象。input用于接收从命令行（键盘）中传来的数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;python
   radius = float(input("please input radius of circule:"))
   print(1, 2, 3, seq=',', end='\n') # print(value,..., seq=',', end='\n')，seq由于表示输出多个值时之间的分隔符。end表示输出最后的结尾用什么。&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内置函数和内置数学库&lt;/li&gt;
&lt;li&gt;range函数。range函数可以接受3个参数，（下限值，上限值，步长），函数会范围一个从下限值开始，到(上限值-1)结束的range对象，该对象中迭代至直接的差值等于步长。如果省略步长，则默认取1；下限值如果省略，那么默认值取0。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;python
   # 由于range返回的是range对象，所以需要使用list将其转换为可以输出的类型。completed 1.7 
   list(range(10))
   list(range(1, 10))
   list(range(1, 10, 2))&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;程序语句结构&lt;/li&gt;
&lt;li&gt;顺序结构&lt;/li&gt;
&lt;li&gt;选择结构&lt;/li&gt;
&lt;li&gt;循环结构&lt;/li&gt;
&lt;li&gt;if-else三元表达式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```python
   # 下面两个代码逻辑上等价
   # 1. 这是三元表达式。
   maxn = (n if n&amp;gt;m else m)&lt;/p&gt;
&lt;p&gt;# 2. 这是if-else语句。
   if n&amp;gt;m:
      maxn = n
   else:
      maxn = m
   ```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;while一般用于不确定循环次数的循环。for一般用于知道循环次数的循环。&lt;/li&gt;
&lt;li&gt;在python中需要表示包含语句块的时候需要用“:”结尾。比如for、if、else等。&lt;/li&gt;
&lt;li&gt;for循环
   for variable in 可迭代对象:
       缩进语句块(循环)
   将可迭代对象一个一个取到variable中。可迭代对象可以使：列表、元组、字符串、range对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;2 Python高级数据类型&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;list列表&lt;/li&gt;
&lt;li&gt;列表的索引，从头到尾方向（index）是从0开始计数。从尾到头方向（negative index）是从-1开始计数。&lt;/li&gt;
&lt;li&gt;列表是&lt;strong&gt;可变序列&lt;/strong&gt;的对象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;列表里面存放的数据类型是引用（列表中元素引用的类型可以不一样）&lt;/strong&gt;，而不是对象本身，所以可以引用任意对象。列表元素是有序的，所以才能通过位置偏移访问。&lt;/li&gt;
&lt;li&gt;有一种创建里面的方式是listVariable = list(可迭代对象)。所谓可迭代对象是可以从该对象中逐一取出元素的兑现。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列表的基本操作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取列表的长度：len(列表对象)&lt;/li&gt;
&lt;li&gt;列表的连接：列表对象1+列表对象2。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列表的重复：列表对象*重复数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
 [1, 2, 3] * 3
 # 输出是[1, 2, 3, 1, 2, 3, 1, 2, 3]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引，取单个的元素：列表名[索引值]（索引值的起始值为0）&lt;/p&gt;
&lt;p&gt;```python
  list1 = list("abcde")
  list1[0]
  # 输出结果是'a'&lt;/p&gt;
&lt;p&gt;list1[4]
  # 输出结果是'e'
  ```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分片：列表名[起始索引:终止索引:步长]。三个参数中前两个必须有一个，起始索引的包含在内，终止索引的不在内。最后一个可选，默认值是1。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
  list1 = list("abcde")
  list1[1:3]
  # 输出结果是['b', 'c']，相当于取了1和2索引位置的值。
  list1[3:]
  # 输出结果是['d', 'e']
  list1[-1::-1]
  # 输出结果是['e', 'd', 'c', 'b', 'a']，这个相当于倒序。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;嵌套列表可以表用来表示多维数组和矩阵。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;修改列表中的某个值：列表名[索引值]=新对象&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改列表中一段区间的内容：列表名[切片]=可迭代对象。&lt;strong&gt;注意这里可迭代对象的长度不一定要和切片的长度相同&lt;/strong&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ```python
 list1 = list(&amp;quot;abcde&amp;quot;)
 list1[1:3] = range(3)
 # 输出结果是[&amp;#39;a&amp;#39;, 0, 1, 2, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;]。将range(3)产生的0,1,2去替换掉了[&amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]。
 ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除列表的一个元素：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;del 列表名[索引值]，通过位置定位找到要删除的元素。&lt;/li&gt;
&lt;li&gt;列表名.remove(对象)，通过值定位找到要删除的元素。&lt;/li&gt;
&lt;li&gt;列表名.pop(索引值)，这个函数做了两个动作，第一个动作是将要删除的值输出出来，第二步是将对应索引值的元素删除。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插入：列表名.insert(索引值，新对象)。&lt;strong&gt;插入位置的对象及其后的对象依次后移&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;追加一个对象：列表名.append(新对象)。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在列表尾部扩展添加多个对象：列表名.extend(可迭代的新对象)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
 list1 = list("abcde")
 list1.extend(['new', True, 3.14])
 print(list1)
 # 输出结果是['a', 'b', 'c', 'd,' 'e', 'new', True, 3.14]。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;清空列表：列表名.clear()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;改变列表元素的顺序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;列表名.reverse()。相当于倒序了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;````python
list1 = list(&amp;quot;abcde&amp;quot;)
list1.reverse()
print(list1)
# 输出结果是[&amp;#39;e&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;b,&amp;#39; &amp;#39;a&amp;#39;]。
````
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列表名.sort()。将列表重新按照ASCII码或者数值大小关系从小到大重新排列。&lt;strong&gt;课程里面说只对英文有效，但实际上对中文同样有效&lt;/strong&gt;。这里老师讲错了。列表名.sort(reverse=True)。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
 list1 = list("debac")
 list1.sort()
 print(list1)
 # 输出结果是['a', 'b', 'c', 'd,' 'e']。
 list1.sort(reverse=True)
 print(list1)
 # 输出结果是['e', 'd', 'c', 'b,' 'a']。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查找对象在列表中的索引值：列表名.index(对象)。返回一个对象对应的索引值。如果有重复的对象那么返回第一个对象的索引值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;元组（tuple）&lt;/li&gt;
&lt;li&gt;特性是&lt;strong&gt;不可变序列，不能在对象原位置上进行修改、添加和删除操作&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;元素也是引用。&lt;/li&gt;
&lt;li&gt;可以元组连接、元组复制、索引操作、分片操作。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特殊的地方：&lt;strong&gt;创建包含一个元素的元组对象时，需要在元组唯一元素对象后额外添加一个逗号“,”，通过实验是可以的，也就是说不需要最后以逗号结尾&lt;/strong&gt;。这里老师讲错了。例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
  t1=(1,) # 变量t1引用包含一个元素的元组对象。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不能使用的操作包括：insert, append, remove, pop, clear这些对对象原位置进行修改的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;字符串（str）。它是一个可迭代对象。存放的是一个字符序列。&lt;strong&gt;通过3个单引号或者双引号来表示多行字符串&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;字符串是&lt;strong&gt;不可变序列&lt;/strong&gt;对象，和元组类似。&lt;/li&gt;
&lt;li&gt;由于字符串是一个序列，所以也可以进行索引、分片、连接、重复等基本的序列操作。&lt;/li&gt;
&lt;li&gt;转义字符。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;字符串的转换。仅包含数字，小数点和正负号的字符串才有可能转化为数值。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;转化为整数：int(包含数字和正负号的数字字符串)&lt;/li&gt;
&lt;li&gt;转为浮点型：float(包含数字，小数点和正负号的数字字符串)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将单个字符再起底层编码和字面形式之间转换。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;转化为底层编码：ord(单个字符)。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
   print(ord('a'))
   print(hex(ord('a')))
   # 输出结果是97
   # 输出结果是0x61&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换为字面形式：chr(字符底层编码)。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
   print(chr(9733))
   print(chr(0x2605))
   # 输出结果是★
   # 输出结果是★&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查找子串的方法：find, rfind, index, rindex。find从左向右找，rfind从右向左找。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;字符串连接：join&lt;/li&gt;
&lt;li&gt;字符串分割：split, rsplit, splitline&lt;/li&gt;
&lt;li&gt;字符串大小写转换：lower, upper, swapcase。swapcase的用途是将小写变为大写，大写变为小写。这里老师讲错了。&lt;/li&gt;
&lt;li&gt;子串替换：replace。&lt;/li&gt;
&lt;li&gt;去除空格：strip, lstrip, rstrip。&lt;/li&gt;
&lt;li&gt;字符串的格式化。两种形式，第一种类似于C语言中的形式，第二种是python的形式。推荐用第二种。第三种字符串格式化方法&lt;a href="https://geek-docs.com/python/python-tutorial/python-fstring.html#Python_f"&gt;python 3.6 之后的字符串格式化方法参考&lt;/a&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;```python
str1 = &amp;quot;Hello %s&amp;quot;%(&amp;quot;python&amp;quot;)
# 推荐用第二种。
str2 = &amp;quot;hello {}&amp;quot;.format(&amp;quot;python&amp;quot;)
# python 3.6之后的最新字符串格式化写法
name = &amp;#39;Peter&amp;#39;
age = 23

print(&amp;#39;%s is %d years old&amp;#39; % (name, age))
print(&amp;#39;{} is {} years old&amp;#39;.format(name, age))
print(f&amp;#39;{name} is {age} years old&amp;#39;)
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;字典&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;键值对映射关系的无序集合类型。特别强调是集合而不是序列了，之前的列表，元组，字符串都是序列。而且强调是无序的。&lt;/li&gt;
&lt;li&gt;字典是&lt;strong&gt;可变的映射&lt;/strong&gt;对象。和列表一样是可以修改的。&lt;/li&gt;
&lt;li&gt;字典元素是无序的，不能通过索引访问，而是通过键访问。&lt;/li&gt;
&lt;li&gt;键是任意&lt;strong&gt;不可变&lt;/strong&gt;的对象，值可以是任意对象。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建字典&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
  D1 = {}
  D2 = {'name':'Tom', 'age':40}
  D3 = dict{name='Tom', age=40}
  D4 = dict([['name', 'Tom'], ['age', 40]])
  D5 = dict(zip(['name', 'age'], ['Tom', 40])) # 前面一个[]是键，后面一个[]里面是值。
  D6 = dict.fromkeys(['a', 'b', 'c'], 0)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取字典某个键值对的值。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取单个值&lt;ol&gt;
&lt;li&gt;字典名[键] # 不推荐，如果键不存在会报错。&lt;/li&gt;
&lt;li&gt;字典名.get(键) # 推荐使用。如果键不存在会返回空值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;获取所有值&lt;ol&gt;
&lt;li&gt;字典名.values() # 返回一个所有值的列表对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;获取所有键&lt;ol&gt;
&lt;li&gt;字典名.keys() # 返回一个所有键的列表对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;获取所有键值对&lt;ol&gt;
&lt;li&gt;字典名.items() # 返回一个所有键值对的列表。其中每个元素是包含了一对键值对的元组。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;修改或者添加键值对&lt;ol&gt;
&lt;li&gt;修改：字典名[键] = 对象&lt;ol&gt;
&lt;li&gt;如果键已存在于字典中，那么就修改该键对应的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果键不存在与字典中，那么就将键值对添加到字典中&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;删除：&lt;ol&gt;
&lt;li&gt;del 字典名[键]&lt;/li&gt;
&lt;li&gt;字典名.pop(键)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;清空：字典名.clear()&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;判断字典中是否存在某个键：键 in 字典名。返回值是布尔类型。说明键是否在字典中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
  D2 = {'name':'Tom', 'age':40}
  'name' in D2   # 返回True
  'gender' in D2 # 返回False&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;3. 高级概念&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;函数&lt;/li&gt;
&lt;li&gt;两种声明方式def和lambda。&lt;/li&gt;
&lt;li&gt;函数调用&lt;ol&gt;
&lt;li&gt;形式参数&lt;/li&gt;
&lt;li&gt;实际参数&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;作用域&lt;ol&gt;
&lt;li&gt;局部变量&lt;/li&gt;
&lt;li&gt;全局变量：&lt;a href="../../codes/4BasicKnowledgePoints/4BasicPython.ipynb"&gt;使用global的示例&lt;/a&gt;。在函数内部只能读取全局变量的值，不能修改全局变量的值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;函数参数&lt;ol&gt;
&lt;li&gt;参数传递&lt;ol&gt;
&lt;li&gt;对于非对象参数，传递的参数是实参的值，也就是说形参创建了一个新的参数，然后将实参的值赋值给了形参。&lt;/li&gt;
&lt;li&gt;对于对象参数，传递的参数是实参的指针。也就是说修改形参实际上是修改了实参的值。
    |对象类型|分类|可变性|传值类型|
    |---|---|---|---|
    |数字|数值|不可变|值传递|
    |字符串|序列|不可变|值传递|
    |列表|序列|可变|引用传递|
    |字典|映射|可变|引用传递|
    |元组|序列|不可变|值传递|
    |文件|扩展|不由python改变|引用传递|
    |集合|集合|可变|引用传递|&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;位置参数&lt;/li&gt;
&lt;li&gt;关键字参数。就是将定义时的形参的名字来指定对应的值。默认值参数需要放到所有形参之后。&lt;/li&gt;
&lt;li&gt;参数默认值&lt;/li&gt;
&lt;li&gt;任意参数收集器和提取器&lt;/li&gt;
&lt;li&gt;lambda表达式。定义形式：lambda arg1,arg2,...,argN:使用冒号前面参数的表达式&lt;ol&gt;
&lt;li&gt;也称为匿名函数。&lt;/li&gt;
&lt;li&gt;只适合表达简单逻辑的函数。&lt;/li&gt;
&lt;li&gt;lambda之后的冒号表示return的值。也就是说lambda类似于有return的函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数结果返回return和yield&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;return表达式：用于返回表达式的值，并且函数退出。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;yield表达式：用户产生一个生成器对象，迭代方位生成器对象，可依次生成所有的数据。一个带有yield的函数就是一个generator，它和普通函数不同，生成一个generator看起来像函数调用，但不会执行任何函数代码，直到对其调用next()（在for循环中会自动调用next()）才开始执行。虽然执行流程仍按函数的流程执行，但每执行到一个yield语句就会中断，并返回一个迭代值，下次执行时从yield的下一个语句继续执行。看起来就好像一个函数在正常执行的过程中被yield中断了数次，每次中断都会通过yield返回当前的迭代值。yield的好处是显而易见的，把一个函数改写为一个generator就获得了迭代能力，比起用类的实例保存状态来计算下一个next()的值，不仅代码简洁，而且执行流程异常清晰。如何判断一个函数是否是一个特殊的 generator 函数？可以利用 isgeneratorfunction 判断。&lt;a href="https://www.runoob.com/w3cnote/python-yield-used-analysis.html"&gt;参考详细说明网址&lt;/a&gt;。&lt;strong&gt;在调用生成器函数的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息（保留局部变量），返回yield的值, 并在下一次执行next()方法时从当前位置继续运行，直到生成器被全部遍历完&lt;/strong&gt;。&lt;img alt="return和yield的区别" src="../../pictures/PythonBasisReturnandYield.jpg" title="return和yield的区别。下面的流程图没有画好，只有引用图片了。"&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mermaid
 graph LR
    A[def]--&amp;gt;B[函数]
    B--&amp;gt;C[return x]
    B--&amp;gt;D[yield x]
    C--&amp;gt;|返回所有值|E[零时变量]
    D--&amp;gt;|保留|E
    E--&amp;gt;|遍历|F[next或者循环]
    F--&amp;gt;|判断是否取完|D
    D--&amp;gt;|取下一个|F&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```python
    def simpleGenerator():
       x = 1
       yield x
       yield x + 1
       yield x + 2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;gen_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;simpleGenerator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# 这个是generator&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen_obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# 这个是function&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;simpleGenerator&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# 这个是generator&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;simpleGenerator&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;inspect&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;isgeneratorfunction&lt;/span&gt; 
&lt;span class="c1"&gt;# 这个返回False&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isgeneratorfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen_obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# 这个返回True&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isgeneratorfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;simpleGenerator&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# 这个返回False&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isgeneratorfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;simpleGenerator&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen_obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen_obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen_obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 在前面的next将gen_obj执行完成之后，gen_obj无法再执行。&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;gen_obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;======&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;yield生成的是一个可迭代对象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;yield被执行完了之后就无法再执行一遍&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;注意区分"functino"和"generator"的区别。&lt;a href="../../codes/4BasicKnowledgePoints/4BasicPython.ipynb"&gt;参考代码，详见“return和yield”部分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;包与模块&lt;/li&gt;
&lt;li&gt;任何一个以扩展名.py结尾的源文件都可以称为模块。&lt;/li&gt;
&lt;li&gt;包是包含了模块的目录。&lt;/li&gt;
&lt;li&gt;Python的核心思想：程序架构基于包和模块的模型。&lt;/li&gt;
&lt;li&gt;有一个顶层文件称为模块的入口。&lt;/li&gt;
&lt;li&gt;导入的过程就是将模块中所有的代码执行一遍存在内存中。&lt;/li&gt;
&lt;li&gt;重载。&lt;/li&gt;
&lt;li&gt;导入方法&lt;ol&gt;
&lt;li&gt;import 模块名1[, 模块名2, 模块名3,.......]&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;使用的时候是：模块名.对象名&lt;ol&gt;
&lt;li&gt;import  模块名1 as 别名&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;使用的时候是：别名.对象名&lt;ol&gt;
&lt;li&gt;from 模块名 import 对象名1[, 对象名2, 对象名3,.......]&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;使用的时候是：对象名&lt;ol&gt;
&lt;li&gt;import 包名&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;必须根据__init__.py制定的导入规则来导入包。&lt;/li&gt;
&lt;li&gt;使用的时候是：包名.模块名.对象名&lt;ol&gt;
&lt;li&gt;import 包名.模块名&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;导入包里面的某一个模块。&lt;/li&gt;
&lt;li&gt;文件与目录&lt;/li&gt;
&lt;li&gt;相对路径&lt;/li&gt;
&lt;li&gt;绝对路径&lt;/li&gt;
&lt;li&gt;操作文件的位置&lt;ol&gt;
&lt;li&gt;seek()设置操作文件指针的位置。一般操作完文件后指针位置在文件结尾的地方。如果需要其他操作的时候，通过seek()函数来调整指针的位置。&lt;/li&gt;
&lt;li&gt;只有当文件句柄被close只有操作文件的内容才能写入文件中。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;类中下划线的使用规则。感觉并没有什么作用。重要参考&lt;a href="https://www.runoob.com/w3cnote/python-5-underline.html"&gt;https://www.runoob.com/w3cnote/python-5-underline.html&lt;/a&gt;。参考：&lt;a href="https://www.cnblogs.com/bravesunforever/p/10743384.html"&gt;https://www.cnblogs.com/bravesunforever/p/10743384.html&lt;/a&gt;。&lt;ol&gt;
&lt;li&gt;_xxx表示的是protected类型的变量，不能用于 from module import *，即保护类型只允许这个类本身与子类进行访问。&lt;/li&gt;
&lt;li&gt;__xxx表示的是私有类型的变量，只能允许这个类本身进行访问，连子类也不能访问。&lt;/li&gt;
&lt;li&gt;__xxx__表示特殊变量，如__init__，__del__，__call__
     |模式|举例|含义|
     |---|---|---|
     |前单下划线|&lt;em&gt;var|命名约定，仅供内部使用。通常不会有python解释器强制执行（通配符导入除外），只作为对程序员的提示。|
     |末尾单下划线|var&lt;/em&gt;|按约定使用以避免与python关键字的命名冲突。|
     |前双下划线|&lt;strong&gt;var|当在类上下文中使用时，触发“名称修饰”。由python解释器强制执行。|
     |前后双下划线|__var&lt;/strong&gt;|表示python语言定义的特殊方法。避免再你自己的属性中使用这种命名方案。|
     |单下划线|_|有时用作临时或无意义变量的名称（“不关心”）。也表示python REPL中最近一个表达的结果。|&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;类中的特殊成员和方法&lt;a href="http://c.biancheng.net/python/special_member/"&gt;http://c.biancheng.net/python/special_member/&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;Python 类提供了 __dict__属性。需要注意的一点是，该属性可以用类名或者类的实例对象来调用，用类名直接调用__dict__，会输出该由类中所有类属性组成的字典；而使用类的实例对象调用__dict__，会输出由类中所有实例属性组成的字典。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;4. Pandas&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pandas简介：是一个分析结构化数据的工具集。使用基础是numpy。&lt;/li&gt;
&lt;li&gt;DataFrame是pandas中的一个表格型的数据结构，包含有一组有序的序列，每列可以是不同的值类型（数值型、字符串、布尔型等），DataFrame即有行索引也有列索引，可以被看做是有&lt;strong&gt;Series组成的字典&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;Series是一种类似于一维数组的对象，是由一组数据（各种numpy数据类型）以及一组与之相关的数据标签（即索引）组成。仅由一组数据也可以产生简单的Series对象。&lt;strong&gt;实质是按照pandas要求进行了一个功能性封装的一维数组&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;numpy是pandas的依赖库。&lt;/li&gt;
&lt;li&gt;pandas数据结构&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Series简介及创建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一维数据结构&lt;/li&gt;
&lt;li&gt;按列方式组织&lt;img alt="Series的结构" src="" title="Series的结构"&gt;&lt;ol&gt;
&lt;li&gt;轴：index。也就是每一列对应的索引，有默认值也可以设定。&lt;/li&gt;
&lt;li&gt;列名：name。&lt;/li&gt;
&lt;li&gt;一列数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;用法：&lt;ol&gt;
&lt;li&gt;pandas.Series(data, [index=index], [name=name])&lt;/li&gt;
&lt;li&gt;data：可以是任何可迭代对象或标量。&lt;/li&gt;
&lt;li&gt;index：可以是任何可迭代对象，&lt;strong&gt;如给定需要与data的长度一致&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;name：是字符串对象。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
pd.Series([1, 2, 3, 4, 5], index=['a', 'b', 'c', 'd', 'e'], name='col')
pd.Series({'a':1, 'b':2, 'c':3, 'd':4, 'e':5}, name='col')&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取Series对象中的单个值。有点和list类似，不同的地方在于Series的索引值可以自己设定。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;s[index] # index缺失的时候会报错&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;s.get(index)   # index缺失的时候不会报错，返回空&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
 s[0]  # 获取第一个值
 s[-1] # 获取最后一个值
 s['a']   # 获取index标签为'a'的值
 s.get(0) # 获取第一个值
 s.get(-1)   # 获取最后一一个值&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定区间的值，和list中分片的操作一样。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语法：s[start_index: end_index, step]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
s[:]  # 取整个series对象。
s[0:3]   # 取series对象中index值在0-2的3个值。
s[::-1]  # 反向取出整个Serier对象。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Series对象的运算&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;可以和标量、Series对象、DataFrame对象结合各种运算符进行运算，也可以通过对象的方法进行计算。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
 s + s # Series中每个元素依次相加。
 s - 2 # 将Series对象中每个元素减去2
 s * 3 # 将Series对象中每个元素乘以3
 s.add(s) # 与s + s对应，但是可以设定轴。
 s.sub(2) # 与s - 2对应，但是可以设定轴。
 s.mul(3) # 与s * 3对应，但是可以设定轴。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性共有3个：values, index, name&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;values获取所有值，以numpy数组类型返回。&lt;/li&gt;
&lt;li&gt;index获取所有索引，以index类型返回。&lt;/li&gt;
&lt;li&gt;name获取列名，由于Series只有一列，因此返回一个string类型。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;删除元素&lt;ol&gt;
&lt;li&gt;s.pop(index)&lt;ol&gt;
&lt;li&gt;返回值是在原始Series中index对应的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;会改变原始数据&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;只能删除一个元素。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;s.drop([index1, index2, ...])&lt;ol&gt;
&lt;li&gt;返回值为Series类型。&lt;/li&gt;
&lt;li&gt;并不会改变原始数据。&lt;/li&gt;
&lt;li&gt;Series有索引label时，只能使用索引label删除。&lt;/li&gt;
&lt;li&gt;Series没有索引label时，则可以使用整数索引删除。&lt;/li&gt;
&lt;li&gt;可以删除多个元素。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DataFrame：DataFrame可以看做是由多个Series对象构成的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;DataFrame创建。DataFrame是二维数据对象，具有2个轴：index(y轴)和columns(x轴)。&lt;/li&gt;
&lt;li&gt;语法：pandas.DataFrame(data, [index=index], [columns=columns])&lt;ol&gt;
&lt;li&gt;data能够接受很多种形式。&lt;/li&gt;
&lt;li&gt;index需要与data的行数一致。&lt;/li&gt;
&lt;li&gt;columns需要和data的列数一致。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列的添加、选取和删除&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
 df["one"]   # 取出列名为one的列。
 df['three'] = df['one'] + df['two'] # 将one列和two列相加，赋值给新增three列中。
 df.insert(1, 'pointhalf', df['one'] * df['two'])   # 将one列和two列相乘的结果插入到索引值为1处，即第2列。注意插入并不是替换原来位置的列。
 del df['three']   # 删除列名为three的列。会影响原始数据。
 df.pop("pointhalf")  # 取出列名为pointhalf的列，并删除。会影响原始数据。
 df.drop('one', axis=1)  # 删除列名为one的列。不会影响到原始数据。在axis参数没有填的时候，drop默认是按行操作的。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引的操作。注意loc和iloc的区别：loc是用来取字符型标签的行的，iloc是用来取数值型（DataFrame默认值）的标签行。
      |操作|语法|结果|
      |---|---|---|
      |选择列|df['one']|Series对象|
      |选择行，通过label|df.loc["a"]|Series对象|
      |选择列，通过label|df.loc[:, "a"]|Series对象|
      |选择行，通过整数索引|df.iloc[0]|Series对象|
      |选择列，通过整数索引|df.iloc[:, 0]|Series对象|
      |通过分片选择多行|df[1:2]|DataFrame对象|
      |通过布尔向量选择多行|df[[True, False, True, False]]|DataFrame对象|&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表达式的筛选&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语法：df[df 关系运算符 数值]。筛选出df中符合表达式要求的值，不符合的以NaN显示。&lt;/li&gt;
&lt;li&gt;语法：df.loc[筛选行的条件, 要显示的列]。筛选出符合条件的行，并指定要显示那些列。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;python
  df[df&amp;lt;0]
  df.loc[df['b']&amp;gt;0, ['b', 'd']]
  df.loc[(df['b']&amp;gt;0)&amp;amp;(df['d']&amp;gt;0)]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DataFrame的转置：&lt;strong&gt;注意行和列的索引都会随之一起改变&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;numpy中的log, log10, log2, exp, sqrt等都可以对DataFrame中的每个元素其作用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ```python
 np.log(df)  # 是对df中每一个元素进行操作
 ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以通过列名对列进行访问。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ```python
    df.ColumnsName  # 是对df中每一个元素进行操作，返回Series。
 ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pandas.read_csv()参数&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;path：指定csv文件路径。&lt;/li&gt;
&lt;li&gt;header：指定第几行作为标题。&lt;/li&gt;
&lt;li&gt;names：设置自定义标题，即DataFrame的columns。&lt;/li&gt;
&lt;li&gt;index_col：设置那一列作为index。&lt;/li&gt;
&lt;li&gt;usecols：设置需要读取那些列。&lt;/li&gt;
&lt;li&gt;encoding：设置编码格式。&lt;/li&gt;
&lt;li&gt;nrows=整数值：&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pandas重要的基本功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;操作csc和excel文件&lt;/li&gt;
&lt;li&gt;Scrapy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;completed.&lt;/p&gt;</content><category term="Commonknowledge"></category><category term="blog"></category><category term="Python"></category></entry><entry><title>时间是不存在的</title><link href="https://youareeverysingleday.github.io/Time-Does-Not-Exist.html" rel="alternate"></link><published>2022-05-30T00:00:00+02:00</published><updated>2022-05-30T00:00:00+02:00</updated><author><name>youareeverysingleday</name></author><id>tag:youareeverysingleday.github.io,2022-05-30:/Time-Does-Not-Exist.html</id><summary type="html">&lt;p&gt;最近刚看了卡洛-罗韦利在TED上的演讲，&lt;a href="https://www.bilibili.com/video/BV13541197sS?spm_id_from=333.880.my_history.page.click"&gt;详见视频&lt;/a&gt;。当时有点晦涩难懂。于是自己看完之后消化思考了一下。本文在于讲述自己的思考 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近刚看了卡洛-罗韦利在TED上的演讲，&lt;a href="https://www.bilibili.com/video/BV13541197sS?spm_id_from=333.880.my_history.page.click"&gt;详见视频&lt;/a&gt;。当时有点晦涩难懂。于是自己看完之后消化思考了一下。本文在于讲述自己的思考过程。没有严密的逻辑推理和物理描述。与诸君分享。&lt;/p&gt;
&lt;p&gt;理论物理是一门非常有意思的学科，它的结果会直接改变人对世界的认知。首先总结卡洛-罗韦利在视频中的重点内容，包含以下4点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;时间这个维度就不存在。&lt;/li&gt;
&lt;li&gt;时间在广义相对论存在的性质似乎在表明时间不存在。&lt;/li&gt;
&lt;li&gt;最新的物理学等式中，代表时间这个参数的变量已经被消去了。&lt;/li&gt;
&lt;li&gt;时间是对运动的刻画。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于第一点是大师的结论，暂且不谈。从第二点开始。时间在我们观察的范围内有一个非常有趣的性质（或者说事实）：时间会随着速度、高度、引力等等外部因素的改变而改变。这一点与人类的直觉相违背。我们一直以来（经典力学和日常生活尝试中）都认为时间是脱离于“长、宽、高”三维而存在的第四维。整个宇宙应该有统一的时间尺度。这样我们才能很好地度量各种运动。如果看过2014年诺兰导演的电影《星际穿越》的读者应该有非常深刻的印象。广义相对论给出的说明是：时间流逝的速度会随着运动速度的增加而变慢。在卡大师的视频中举了GPS卫星的例子。科学家告诉美国军方。卫星在轨道上的时间会和地面上的时间不一样。当时美国军方不以为然，结果肯定是导致了定位不准。这就直接引出了一个问题：没有办法来统一的度量运动吗？对不起，确实没有相关知识基础（学习过大学非物理专业物理课）只是通过逻辑在瞎想。如果有读者明白可以交流。自己找的对应的例子是为了描述光在真空中传播时科学家猜测的有特殊性质的物质——“以太”。由于以太的性质过于特殊，最后证明它是不存在的。光是一种电磁波，光本身就是一种物质形态，所以光不用借助其他物质来传播。只不过光的传播速度是光速。&lt;/p&gt;
&lt;p&gt;对于第三点，大师说当前的广义相对论和量子力学来描述运动时不太相容。于是1963年Joe Wheeler和Bryce DeWitt提出了广义相对论和量子物理学相结合的方程如下：&lt;/p&gt;
&lt;p&gt;$$G_{abcd}\frac{\delta}{\delta g_{ab}}\frac{\delta}{\delta g_{cd}}\Psi[g] - gR[g]\Psi [g]=0$$&lt;/p&gt;
&lt;p&gt;对公式的理解完全一片空白。但是视频中说到这个方程其中有一个令人吃惊的特征，这个方程里面没有时间$t$所代表的变量。而且大师说明时间在量子维度是不适用的，需要通过其他的变量来度量量子的运动。在量子尺度，时间不再有统一的尺度，各个量子有各自的时间尺度（这句不知道理解的对不对）。时间只是人们在人类所处的宏观尺度的总结。&lt;/p&gt;
&lt;p&gt;在上一段的基础上，大师给出了说明。时间只是人类将一种运动对应于另一种运动的度量。也就是说，平时我们时间也是一种运动，只不过我们把其他的所有运动都与这种运动进行了对比，从而方便人们来刻画不同的运动。大师说我们日常看到的钟表实际上是一种运动，也就是说我们观察到的物体运动对应到钟表指示的位置而已。自己思考的两点在于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;时间的进制太特殊了。这是小时候就存在的思考和考试时候的噩梦。一会60进制，一会24进制，一会365.x进制。为什么就不能像长宽高一样统一十进制呢？如果按照大师的说明，好像有所体会的明白了，多种进制只是刻画了与我们生活直接相关的不同物体的运动规律。&lt;/li&gt;
&lt;li&gt;自己理解：时间实际上是方便刻画不同运动的投影空间。举两个侧面的例子来说明：&lt;/li&gt;
&lt;li&gt;在机器学习中，常常会碰到在一个特定维度的空间中不容易进行分类的数据。有一种常用的方法就是将数据投影到一个高维空间中，就可以非常方便地对其进行回归或者分类了。&lt;/li&gt;
&lt;li&gt;钱。钱是用于我们来衡量很多东西的一种度量。具体而言钱本身是不存在的，但是人们为了方便的度量各种物质之间的交换关系，人为定义出了钱这个东西。这样就可以非常方便地知道山东的多少根什么季节出产的什么类型的大葱可以换一套上海黄浦四平路上的大平层了。钱实际上就是不同物质交换关系在一个高维度的投影。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;思考一番之后，感觉有点道理哦。人类目前只是存在于宇宙中非常微小的一块。观察到的世界也是非常有局限的。只是为了成为多行星物种，我们都还有非常多的未知需要探索，更何况浩瀚的宇宙。所以完全不用担心宇宙被我们已经探索完毕了，我们现在的已知只是在无穷的黑色未知平面中划上一些长度有限的线或者点而已。&lt;/p&gt;</content><category term="Physics"></category><category term="blog"></category><category term="Physics"></category></entry><entry><title>常用LaTex符号</title><link href="https://youareeverysingleday.github.io/Common-latex-symbols.html" rel="alternate"></link><published>2017-05-17T00:00:00+02:00</published><updated>2017-05-17T00:00:00+02:00</updated><author><name>youareeverysingleday</name></author><id>tag:youareeverysingleday.github.io,2017-05-17:/Common-latex-symbols.html</id><summary type="html">&lt;h2&gt;1. 参考&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;参考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;手册，重要参考&lt;a href="https://www.zybuluo.com/codeep/note/163962"&gt;https://www.zybuluo.com/codeep/note/163962&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;一些重要字符速查&lt;a href="https://blog.csdn.net/katherine_hsr/article/details/79179622"&gt;https://blog.csdn.net/katherine_hsr/article/details/79179622&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;一些复杂矩阵的书写&lt;a href="https://zhuanlan.zhihu.com/p/266267223?utm_source=wechat_session"&gt;https://zhuanlan …&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h2&gt;1. 参考&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;参考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;手册，重要参考&lt;a href="https://www.zybuluo.com/codeep/note/163962"&gt;https://www.zybuluo.com/codeep/note/163962&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;一些重要字符速查&lt;a href="https://blog.csdn.net/katherine_hsr/article/details/79179622"&gt;https://blog.csdn.net/katherine_hsr/article/details/79179622&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;一些复杂矩阵的书写&lt;a href="https://zhuanlan.zhihu.com/p/266267223?utm_source=wechat_session"&gt;https://zhuanlan.zhihu.com/p/266267223?utm_source=wechat_session&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;2. 常用符号速查表&lt;/h2&gt;
&lt;h3&gt;2.1 希腊字母和希伯来文字母 Greek and Hebrew letters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\alpha$&lt;/td&gt;
&lt;td&gt;\alpha&lt;/td&gt;
&lt;td&gt;各种希腊字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\beta$&lt;/td&gt;
&lt;td&gt;\beta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\gamma$&lt;/td&gt;
&lt;td&gt;\gamma&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Gamma$&lt;/td&gt;
&lt;td&gt;\Gamma&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\delta$&lt;/td&gt;
&lt;td&gt;\delta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Delta$&lt;/td&gt;
&lt;td&gt;\Delta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\epsilon$&lt;/td&gt;
&lt;td&gt;\epsilon&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\varepsilon$&lt;/td&gt;
&lt;td&gt;\varepsilon&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\zeta$&lt;/td&gt;
&lt;td&gt;\zeta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\eta$&lt;/td&gt;
&lt;td&gt;\eta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\theta$&lt;/td&gt;
&lt;td&gt;\theta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Theta$&lt;/td&gt;
&lt;td&gt;\Theta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\vartheta$&lt;/td&gt;
&lt;td&gt;\vartheta&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\iota$&lt;/td&gt;
&lt;td&gt;\iota&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\pi$&lt;/td&gt;
&lt;td&gt;\pi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\phi$&lt;/td&gt;
&lt;td&gt;\phi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Phi$&lt;/td&gt;
&lt;td&gt;\Phi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\psi$&lt;/td&gt;
&lt;td&gt;\psi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Psi$&lt;/td&gt;
&lt;td&gt;\Psi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\omega$&lt;/td&gt;
&lt;td&gt;\omega&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Omega$&lt;/td&gt;
&lt;td&gt;\Omega&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\chi$&lt;/td&gt;
&lt;td&gt;\chi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\rho$&lt;/td&gt;
&lt;td&gt;\rho&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\omicron$&lt;/td&gt;
&lt;td&gt;\omicron&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sigma$&lt;/td&gt;
&lt;td&gt;\sigma&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Sigma$&lt;/td&gt;
&lt;td&gt;\Sigma&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\nu$&lt;/td&gt;
&lt;td&gt;\nu&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\xi$&lt;/td&gt;
&lt;td&gt;\xi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Xi$&lt;/td&gt;
&lt;td&gt;\Xi&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\tau$&lt;/td&gt;
&lt;td&gt;\tau&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lambda$&lt;/td&gt;
&lt;td&gt;\lambda&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Lambda$&lt;/td&gt;
&lt;td&gt;\Lambda&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mu$&lt;/td&gt;
&lt;td&gt;\mu&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Upsilon$&lt;/td&gt;
&lt;td&gt;\Upsilon&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\partial$&lt;/td&gt;
&lt;td&gt;\partial&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\aleph$&lt;/td&gt;
&lt;td&gt;\aleph&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\beth$&lt;/td&gt;
&lt;td&gt;\beth&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\daleth$&lt;/td&gt;
&lt;td&gt;daleth&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\gimel$&lt;/td&gt;
&lt;td&gt;\gimel&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$\sum\limits_{i=0}^n$&lt;/td&gt;
&lt;td&gt;\sum \limits_{i=0}^n&lt;/td&gt;
&lt;td&gt;求和&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;$\sum_{i=0}^n$&lt;/td&gt;
&lt;td&gt;\sum_{i=0}^n&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\frac{\partial x}{\partial y}$&lt;/td&gt;
&lt;td&gt;\frac{\partial x}{\partial y}&lt;/td&gt;
&lt;td&gt;偏导数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$180^\circ$&lt;/td&gt;
&lt;td&gt;180^\circ&lt;/td&gt;
&lt;td&gt;表示摄氏度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigodot$&lt;/td&gt;
&lt;td&gt;\bigodot&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\pm$&lt;/td&gt;
&lt;td&gt;\pm&lt;/td&gt;
&lt;td&gt;正负号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mp$&lt;/td&gt;
&lt;td&gt;\mp&lt;/td&gt;
&lt;td&gt;正负号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lfloor$&lt;/td&gt;
&lt;td&gt;\lfloor&lt;/td&gt;
&lt;td&gt;下界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\rfloor$&lt;/td&gt;
&lt;td&gt;\rfloor&lt;/td&gt;
&lt;td&gt;下界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lceil$&lt;/td&gt;
&lt;td&gt;\lceil&lt;/td&gt;
&lt;td&gt;上界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\rceil$&lt;/td&gt;
&lt;td&gt;\rceil&lt;/td&gt;
&lt;td&gt;上界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\prod$&lt;/td&gt;
&lt;td&gt;\prod&lt;/td&gt;
&lt;td&gt;连乘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\prod \limits_{i=1}^n$&lt;/td&gt;
&lt;td&gt;\prod \limits_{i=1}^n&lt;/td&gt;
&lt;td&gt;连乘示例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\coprod$&lt;/td&gt;
&lt;td&gt;\coprod&lt;/td&gt;
&lt;td&gt;N元余积&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cdots$&lt;/td&gt;
&lt;td&gt;\cdots&lt;/td&gt;
&lt;td&gt;3个点，表示省略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\dot{a}$&lt;/td&gt;
&lt;td&gt;\dot{a}&lt;/td&gt;
&lt;td&gt;一阶导数，变量上加一个点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ddot{a}$&lt;/td&gt;
&lt;td&gt;\ddot{a}&lt;/td&gt;
&lt;td&gt;二阶导数，变量上加两个点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\int$&lt;/td&gt;
&lt;td&gt;\int&lt;/td&gt;
&lt;td&gt;积分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\int_0^1 {x^2} \,{\rm d}x$&lt;/td&gt;
&lt;td&gt;\int_0^1 {x^2} \,{\rm d}x&lt;/td&gt;
&lt;td&gt;积分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\iint$&lt;/td&gt;
&lt;td&gt;\iint&lt;/td&gt;
&lt;td&gt;双重积分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\oint$&lt;/td&gt;
&lt;td&gt;\oint&lt;/td&gt;
&lt;td&gt;曲线积分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\because$&lt;/td&gt;
&lt;td&gt;\because&lt;/td&gt;
&lt;td&gt;因为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\therefore$&lt;/td&gt;
&lt;td&gt;\therefore&lt;/td&gt;
&lt;td&gt;所以&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lbrace \rbrace$&lt;/td&gt;
&lt;td&gt;\lbrace \rbrace&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\hat{y}$&lt;/td&gt;
&lt;td&gt;\hat{y}&lt;/td&gt;
&lt;td&gt;加帽，一般表示期望&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\check{y}$&lt;/td&gt;
&lt;td&gt;\check{y}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\breve{y}$&lt;/td&gt;
&lt;td&gt;\breve{y}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\overline{a+b+c+d}$&lt;/td&gt;
&lt;td&gt;\overline{a+b+c+d}&lt;/td&gt;
&lt;td&gt;上面加线，表示补集或者表示平均值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\overline{A}$&lt;/td&gt;
&lt;td&gt;\overline{A}&lt;/td&gt;
&lt;td&gt;表示补集或均值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\underline{a+b+c+d}$&lt;/td&gt;
&lt;td&gt;\underline{a+b+c+d}&lt;/td&gt;
&lt;td&gt;下面加线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}$&lt;/td&gt;
&lt;td&gt;\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}&lt;/td&gt;
&lt;td&gt;上下加括号，并填写对应的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\vec{a}$&lt;/td&gt;
&lt;td&gt;\vec{a}&lt;/td&gt;
&lt;td&gt;向量，变量上加箭头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\widehat{a}$&lt;/td&gt;
&lt;td&gt;\widehat{a}&lt;/td&gt;
&lt;td&gt;(线性回归，直线方程) a尖，变量上加上三角&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\widetilde{a}$&lt;/td&gt;
&lt;td&gt;\widetilde{a}&lt;/td&gt;
&lt;td&gt;颚化符号  等价无穷小，变量上加波浪线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\boldsymbol{X}$&lt;/td&gt;
&lt;td&gt;\boldsymbol{X}&lt;/td&gt;
&lt;td&gt;加粗，表示向量或者矩阵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbf{X}$&lt;/td&gt;
&lt;td&gt;\mathbf{X}&lt;/td&gt;
&lt;td&gt;加粗，表示向量或者矩阵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\pmb{C}$&lt;/td&gt;
&lt;td&gt;\pmb{C}&lt;/td&gt;
&lt;td&gt;加粗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{N}$&lt;/td&gt;
&lt;td&gt;\mathbb{N}&lt;/td&gt;
&lt;td&gt;自然数集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{Z}$&lt;/td&gt;
&lt;td&gt;\mathbb{Z}&lt;/td&gt;
&lt;td&gt;整数集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{Q}$&lt;/td&gt;
&lt;td&gt;\mathbb{Q}&lt;/td&gt;
&lt;td&gt;有理数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{R}^{m\times n}$&lt;/td&gt;
&lt;td&gt;\mathbb{R}^{m\times n}&lt;/td&gt;
&lt;td&gt;实数集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{A}$&lt;/td&gt;
&lt;td&gt;\mathbb{A}&lt;/td&gt;
&lt;td&gt;无理集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{C}$&lt;/td&gt;
&lt;td&gt;\mathbb{C}&lt;/td&gt;
&lt;td&gt;复数集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sqrt{2}$&lt;/td&gt;
&lt;td&gt;\sqrt{2}&lt;/td&gt;
&lt;td&gt;开方，根号，开平方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$1\quad 2$&lt;/td&gt;
&lt;td&gt;\quad&lt;/td&gt;
&lt;td&gt;空格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$1\qquad 2$&lt;/td&gt;
&lt;td&gt;\qquad&lt;/td&gt;
&lt;td&gt;空2个格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$1\text{   } 2$&lt;/td&gt;
&lt;td&gt;\text{   }&lt;/td&gt;
&lt;td&gt;空3个格，&lt;strong&gt;这种无法实现&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$1\; 2$&lt;/td&gt;
&lt;td&gt;\;&lt;/td&gt;
&lt;td&gt;空半格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$1\, 2$&lt;/td&gt;
&lt;td&gt;\,&lt;/td&gt;
&lt;td&gt;空半格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\overleftarrow{xy}$&lt;/td&gt;
&lt;td&gt;\overleftarrow{xy}&lt;/td&gt;
&lt;td&gt;上方添加左箭头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\overleftrightarrow{xy}$&lt;/td&gt;
&lt;td&gt;\overleftrightarrow{xy}&lt;/td&gt;
&lt;td&gt;上方添加双向箭头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\rm{Word Style}$&lt;/td&gt;
&lt;td&gt;\rm{Word Style}&lt;/td&gt;
&lt;td&gt;罗马体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\it{Word Style}$&lt;/td&gt;
&lt;td&gt;\it{Word Style}&lt;/td&gt;
&lt;td&gt;斜体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bf{Word Style}$&lt;/td&gt;
&lt;td&gt;\bf{Word Style}&lt;/td&gt;
&lt;td&gt;粗体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sf{Word Style}$&lt;/td&gt;
&lt;td&gt;\sf{Word Style}&lt;/td&gt;
&lt;td&gt;等线体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\tt{Word Style}$&lt;/td&gt;
&lt;td&gt;\tt{Word Style}&lt;/td&gt;
&lt;td&gt;打字机体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\frak{Word Style}$&lt;/td&gt;
&lt;td&gt;\frak{Word Style}&lt;/td&gt;
&lt;td&gt;旧德式字体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathcal{WORD STYLE}$&lt;/td&gt;
&lt;td&gt;\mathcal{Word Style}&lt;/td&gt;
&lt;td&gt;花体（数学符号等），&lt;strong&gt;仅大写可用&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mathbb{WORD STYLE}$&lt;/td&gt;
&lt;td&gt;\mathbb{Word Style}&lt;/td&gt;
&lt;td&gt;黑板粗体（定义域等），&lt;strong&gt;仅大写可用&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mit{WORD STYLE}$&lt;/td&gt;
&lt;td&gt;\mit{Word Style}&lt;/td&gt;
&lt;td&gt;数学斜体，不支持，&lt;strong&gt;仅大写可用&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\scr{WORD STYLE}$&lt;/td&gt;
&lt;td&gt;\scr{Word Style}&lt;/td&gt;
&lt;td&gt;手写体，不支持，&lt;strong&gt;仅大写可用&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\boldsymbol{D}$&lt;/td&gt;
&lt;td&gt;\boldsymbol{D}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;表示向量或者矩阵的加粗斜体&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\color{red}{Latex}$&lt;/td&gt;
&lt;td&gt;\color{red}{Latex}&lt;/td&gt;
&lt;td&gt;给文字添加颜色，相关颜色详见下面的例子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$A \overset{some sentence}{=} B$&lt;/td&gt;
&lt;td&gt;\overset{some sentence}{=}&lt;/td&gt;
&lt;td&gt;文字在等号上面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$A \underset{some sentence}{=} B$&lt;/td&gt;
&lt;td&gt;\underset{some sentence}{=}&lt;/td&gt;
&lt;td&gt;文字在等号下面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;2.5 标准函数名 standard function names&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arccos$&lt;/td&gt;
&lt;td&gt;\arccos&lt;/td&gt;
&lt;td&gt;反余弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arcctg$&lt;/td&gt;
&lt;td&gt;\arcctg&lt;/td&gt;
&lt;td&gt;反余切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arcsin$&lt;/td&gt;
&lt;td&gt;\arcsin&lt;/td&gt;
&lt;td&gt;反正弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arctan$&lt;/td&gt;
&lt;td&gt;\arctan&lt;/td&gt;
&lt;td&gt;反正切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cos$&lt;/td&gt;
&lt;td&gt;\cos&lt;/td&gt;
&lt;td&gt;余弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\csc$&lt;/td&gt;
&lt;td&gt;\csc&lt;/td&gt;
&lt;td&gt;余割&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ctg$&lt;/td&gt;
&lt;td&gt;\ctg&lt;/td&gt;
&lt;td&gt;余切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\exp$&lt;/td&gt;
&lt;td&gt;\exp&lt;/td&gt;
&lt;td&gt;以e为底的指数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lg$&lt;/td&gt;
&lt;td&gt;\lg&lt;/td&gt;
&lt;td&gt;以10为底的对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lim$&lt;/td&gt;
&lt;td&gt;\lim&lt;/td&gt;
&lt;td&gt;求极限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ln$&lt;/td&gt;
&lt;td&gt;\ln&lt;/td&gt;
&lt;td&gt;以e为底的对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\log$&lt;/td&gt;
&lt;td&gt;\log&lt;/td&gt;
&lt;td&gt;对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\min$&lt;/td&gt;
&lt;td&gt;\min&lt;/td&gt;
&lt;td&gt;求最小值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\max$&lt;/td&gt;
&lt;td&gt;\max&lt;/td&gt;
&lt;td&gt;求最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Pr$&lt;/td&gt;
&lt;td&gt;\Pr&lt;/td&gt;
&lt;td&gt;求概率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sin$&lt;/td&gt;
&lt;td&gt;\sin&lt;/td&gt;
&lt;td&gt;正弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\tan$&lt;/td&gt;
&lt;td&gt;\tan&lt;/td&gt;
&lt;td&gt;正切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\log_{a}{x}$&lt;/td&gt;
&lt;td&gt;\log{x}&lt;/td&gt;
&lt;td&gt;以a为底的对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ln{x}$&lt;/td&gt;
&lt;td&gt;\ln{x}&lt;/td&gt;
&lt;td&gt;以e为底的对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lg{x}$&lt;/td&gt;
&lt;td&gt;\lg{x}&lt;/td&gt;
&lt;td&gt;以10为底的对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sin\theta$&lt;/td&gt;
&lt;td&gt;\sin\theta&lt;/td&gt;
&lt;td&gt;正弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cos\theta$&lt;/td&gt;
&lt;td&gt;\cos\theta&lt;/td&gt;
&lt;td&gt;余弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\tan\theta$&lt;/td&gt;
&lt;td&gt;\tan\theta&lt;/td&gt;
&lt;td&gt;正切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cot\theta$&lt;/td&gt;
&lt;td&gt;\cot\theta&lt;/td&gt;
&lt;td&gt;余切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arctan\theta$&lt;/td&gt;
&lt;td&gt;\tan\theta&lt;/td&gt;
&lt;td&gt;反正切&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arcsin\frac{L}{r}$&lt;/td&gt;
&lt;td&gt;\arcsin\frac{L}{r}&lt;/td&gt;
&lt;td&gt;反正弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\max H$&lt;/td&gt;
&lt;td&gt;\max H&lt;/td&gt;
&lt;td&gt;最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\log_\alpha x$&lt;/td&gt;
&lt;td&gt;\log_\alpha x&lt;/td&gt;
&lt;td&gt;以$\alpha$为底的对数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\gcd(T,U,V,W,X)$&lt;/td&gt;
&lt;td&gt;\gcd(T,U,V,W,X)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\arg x$&lt;/td&gt;
&lt;td&gt;\arg x&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$a \bmod b$&lt;/td&gt;
&lt;td&gt;a \bmod b&lt;/td&gt;
&lt;td&gt;求余&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lim \limits_{\rho \rightarrow 0} \frac{\Delta x}{\Delta y}$&lt;/td&gt;
&lt;td&gt;\lim \limits_{\rho \rightarrow 0} \frac{\Delta x}{\Delta y}&lt;/td&gt;
&lt;td&gt;极限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\lim_{t\to n}T$&lt;/td&gt;
&lt;td&gt;\lim_{t\to n}T&lt;/td&gt;
&lt;td&gt;极限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;2.6 逻辑运算符或者关系运算法 binary operation/ relation symbols&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\wedge$&lt;/td&gt;
&lt;td&gt;\wedge&lt;/td&gt;
&lt;td&gt;逻辑且&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\vee$&lt;/td&gt;
&lt;td&gt;\vee&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mid$&lt;/td&gt;
&lt;td&gt;\mid&lt;/td&gt;
&lt;td&gt;竖线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigoplus$&lt;/td&gt;
&lt;td&gt;\bigoplus&lt;/td&gt;
&lt;td&gt;异或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\geqslant$&lt;/td&gt;
&lt;td&gt;\geqslant&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\leqslant$&lt;/td&gt;
&lt;td&gt;\leqslant&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\leq$&lt;/td&gt;
&lt;td&gt;\leq&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\geq$&lt;/td&gt;
&lt;td&gt;\geq&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\neq$&lt;/td&gt;
&lt;td&gt;\neq&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\equiv$&lt;/td&gt;
&lt;td&gt;\equiv&lt;/td&gt;
&lt;td&gt;恒等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\coloneqq$&lt;/td&gt;
&lt;td&gt;\coloneqq&lt;/td&gt;
&lt;td&gt;定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\not ={}$&lt;/td&gt;
&lt;td&gt;\not ={}&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\approx$&lt;/td&gt;
&lt;td&gt;\approx&lt;/td&gt;
&lt;td&gt;约等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sim$&lt;/td&gt;
&lt;td&gt;\sim&lt;/td&gt;
&lt;td&gt;约等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\propto$&lt;/td&gt;
&lt;td&gt;\propto&lt;/td&gt;
&lt;td&gt;正比于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\widehat{=}$&lt;/td&gt;
&lt;td&gt;\widehat{=}&lt;/td&gt;
&lt;td&gt;相关于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cup$&lt;/td&gt;
&lt;td&gt;\cup&lt;/td&gt;
&lt;td&gt;并集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cap$&lt;/td&gt;
&lt;td&gt;\cap&lt;/td&gt;
&lt;td&gt;交集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigcap$&lt;/td&gt;
&lt;td&gt;\bigcap&lt;/td&gt;
&lt;td&gt;交集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigvee$&lt;/td&gt;
&lt;td&gt;\bigvee&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigwedge$&lt;/td&gt;
&lt;td&gt;\bigwedge&lt;/td&gt;
&lt;td&gt;逻辑与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\biguplus$&lt;/td&gt;
&lt;td&gt;\biguplus&lt;/td&gt;
&lt;td&gt;多重集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigsqcup$&lt;/td&gt;
&lt;td&gt;\bigsqcup&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\sim$&lt;/td&gt;
&lt;td&gt;\sim&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\backsim$&lt;/td&gt;
&lt;td&gt;\backsim&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cong$&lt;/td&gt;
&lt;td&gt;\cong&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\not&amp;gt;$&lt;/td&gt;
&lt;td&gt;\not&amp;gt;&lt;/td&gt;
&lt;td&gt;不大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\not&amp;lt;$&lt;/td&gt;
&lt;td&gt;\not&amp;lt;&lt;/td&gt;
&lt;td&gt;不小于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\in$&lt;/td&gt;
&lt;td&gt;\in&lt;/td&gt;
&lt;td&gt;属于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ni$&lt;/td&gt;
&lt;td&gt;\ni&lt;/td&gt;
&lt;td&gt;属于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\notin$&lt;/td&gt;
&lt;td&gt;\notin&lt;/td&gt;
&lt;td&gt;不属于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\not\ni$&lt;/td&gt;
&lt;td&gt;\not\ni&lt;/td&gt;
&lt;td&gt;不属于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\emptyset$&lt;/td&gt;
&lt;td&gt;\emptyset&lt;/td&gt;
&lt;td&gt;空集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\subset$&lt;/td&gt;
&lt;td&gt;\subset&lt;/td&gt;
&lt;td&gt;子集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\not\subset$&lt;/td&gt;
&lt;td&gt;\not\subset&lt;/td&gt;
&lt;td&gt;非子集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\subseteq$&lt;/td&gt;
&lt;td&gt;\subseteq&lt;/td&gt;
&lt;td&gt;真子集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\supseteq$&lt;/td&gt;
&lt;td&gt;\supseteq&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\top$&lt;/td&gt;
&lt;td&gt;\top&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bot$&lt;/td&gt;
&lt;td&gt;\bot&lt;/td&gt;
&lt;td&gt;两个几何概念互相垂直；或表示两个事件互相独立&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\times$&lt;/td&gt;
&lt;td&gt;\times&lt;/td&gt;
&lt;td&gt;一般乘号、乘法、叉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cdot$&lt;/td&gt;
&lt;td&gt;\cdot&lt;/td&gt;
&lt;td&gt;点乘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ast$&lt;/td&gt;
&lt;td&gt;\ast&lt;/td&gt;
&lt;td&gt;乘号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\odot$&lt;/td&gt;
&lt;td&gt;\odot&lt;/td&gt;
&lt;td&gt;圈乘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\circ$&lt;/td&gt;
&lt;td&gt;\circ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigotimes$&lt;/td&gt;
&lt;td&gt;\bigotimes&lt;/td&gt;
&lt;td&gt;克罗内克积&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\div$&lt;/td&gt;
&lt;td&gt;\div&lt;/td&gt;
&lt;td&gt;一般除号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\propto$&lt;/td&gt;
&lt;td&gt;\propto&lt;/td&gt;
&lt;td&gt;正比于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\triangleq$&lt;/td&gt;
&lt;td&gt;\triangleq&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\bigcirc$&lt;/td&gt;
&lt;td&gt;\bigcirc&lt;/td&gt;
&lt;td&gt;圆圈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;2.7 箭头符号 arrorw symbols&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Uparrow$&lt;/td&gt;
&lt;td&gt;\uparrow&lt;/td&gt;
&lt;td&gt;各种箭头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Uparrow$&lt;/td&gt;
&lt;td&gt;\Uparrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\downarrow$&lt;/td&gt;
&lt;td&gt;\downarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Downarrow$&lt;/td&gt;
&lt;td&gt;\Downarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\leftarrow$&lt;/td&gt;
&lt;td&gt;\leftarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Leftarrow$&lt;/td&gt;
&lt;td&gt;\Leftarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\rightarrow$&lt;/td&gt;
&lt;td&gt;\rightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Rightarrow$&lt;/td&gt;
&lt;td&gt;\Rightarrow&lt;/td&gt;
&lt;td&gt;推出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\updownarrow$&lt;/td&gt;
&lt;td&gt;\updownarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Updownarrow$&lt;/td&gt;
&lt;td&gt;\Updownarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\leftrightarrow$&lt;/td&gt;
&lt;td&gt;\leftrightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Leftrightarrow$&lt;/td&gt;
&lt;td&gt;\Leftrightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Longleftrightarrow$&lt;/td&gt;
&lt;td&gt;\Longleftrightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Longleftarrow$&lt;/td&gt;
&lt;td&gt;\Longleftarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\longleftarrow$&lt;/td&gt;
&lt;td&gt;\longleftarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\longrightarrow$&lt;/td&gt;
&lt;td&gt;\longrightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\Longrightarrow$&lt;/td&gt;
&lt;td&gt;\Longrightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\mapsto$&lt;/td&gt;
&lt;td&gt;\mapsto&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\longmapsto$&lt;/td&gt;
&lt;td&gt;\longmapsto&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\nRightarrow$&lt;/td&gt;
&lt;td&gt;\nRightarrow&lt;/td&gt;
&lt;td&gt;不能推出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\nLeftarrow$&lt;/td&gt;
&lt;td&gt;\nLeftarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\nLeftrightarrow$&lt;/td&gt;
&lt;td&gt;\nLeftrightarrow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;2.8 杂项符号 miscellaneous symbols&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\forall$&lt;/td&gt;
&lt;td&gt;\forall&lt;/td&gt;
&lt;td&gt;任意&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\exists$&lt;/td&gt;
&lt;td&gt;\exists&lt;/td&gt;
&lt;td&gt;存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\nexists$&lt;/td&gt;
&lt;td&gt;\nexists&lt;/td&gt;
&lt;td&gt;不存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\complement$&lt;/td&gt;
&lt;td&gt;\complement&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\angle A$&lt;/td&gt;
&lt;td&gt;\angle A&lt;/td&gt;
&lt;td&gt;角A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\measuredangle A$&lt;/td&gt;
&lt;td&gt;\measuredangle A&lt;/td&gt;
&lt;td&gt;测量角&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\surd$&lt;/td&gt;
&lt;td&gt;\surd&lt;/td&gt;
&lt;td&gt;勾、正确的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\square$&lt;/td&gt;
&lt;td&gt;\square&lt;/td&gt;
&lt;td&gt;方块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\varnothing$&lt;/td&gt;
&lt;td&gt;\varnothing&lt;/td&gt;
&lt;td&gt;空变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\emptyset$&lt;/td&gt;
&lt;td&gt;\emptyset&lt;/td&gt;
&lt;td&gt;空集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ddots$&lt;/td&gt;
&lt;td&gt;\ddots&lt;/td&gt;
&lt;td&gt;斜着三点，注意没有反斜线的三点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\cdots$&lt;/td&gt;
&lt;td&gt;\cdots&lt;/td&gt;
&lt;td&gt;横着三点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\vdots$&lt;/td&gt;
&lt;td&gt;\vdots&lt;/td&gt;
&lt;td&gt;竖着三点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\ldots$&lt;/td&gt;
&lt;td&gt;\ldots&lt;/td&gt;
&lt;td&gt;横着三点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\infty$&lt;/td&gt;
&lt;td&gt;\infty&lt;/td&gt;
&lt;td&gt;无穷大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$\nabla$&lt;/td&gt;
&lt;td&gt;\nabla&lt;/td&gt;
&lt;td&gt;梯度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;3. 重要例子和不方便在表格中显示的公式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;更改文字颜色，将\color{}大括号中的颜色替换即可。：
    代码：\color{red}{Latex \quad color \quad of \quad word}&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编号&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;Latex代码&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$\color{black}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;black&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;$\color{silver}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;silver&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;$\color{maroon}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;maroon&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;$\color{yellow}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;yellow&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;$\color{olive}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;olive&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;$\color{teal}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;teal&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;$\color{blue}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;blue&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;$\color{purple}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;purple&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;$\color{grey}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;grey&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;$\color{white}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;white&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;$\color{red}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;red&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;$\color{lime}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;lime&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;$\color{green}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;green&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;$\color{auqa}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;auqa&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;$\color{navy}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;navy&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;$\color{fuchsia}{Latex \quad color \quad of \quad word}$&lt;/td&gt;
&lt;td&gt;fuchsia&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在\text{}中可以再插入公式。&lt;strong&gt;这种写法可以在行间公式中使用，在行内公式中无法正确显示&lt;/strong&gt;。
    $$f(n)= \begin{cases} n/2, &amp;amp; \text {if $n$ is even} \ 3n+1, &amp;amp; \text{if $n$ is odd} \end{cases}
    $$&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;代码：&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;begin&lt;/span&gt;{&lt;span class="nv"&gt;cases&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;{&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="nv"&gt;n&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;even&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;\\&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;text&lt;/span&gt;{&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="nv"&gt;n&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;odd&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="k"&gt;end&lt;/span&gt;{&lt;span class="nv"&gt;cases&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公式编号，&lt;strong&gt;注意只能在行间公式中使用，不能在行内公式中使用&lt;/strong&gt;。
    $$x+y = z \tag{1.1}$$
        代码：x+y = z \tag{1.1}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最常用的多行公式或者证明过程可以使用，在后面的4.3中也专门说明了alignde是最好用的：
    $$
        \begin{aligned}
        &amp;amp; \text{不失一般性的设某个子群的2个陪集分别是：}g_1H, g_2H \
        &amp;amp; \because g_1H, g_2H\text{之间存在交集，不失一般性的设两个陪集之间存在一个公共元素为}g_1h_1 = g_2h_2 \
        &amp;amp; \Rightarrow g_1 = g_2h_2h_1^{-1} \
        &amp;amp; \text{令：}h_3 = h_2h_1^{-1} \
        &amp;amp; g_1H = g_2h_3H \
        &amp;amp; \because \text{群的封闭性} \
        &amp;amp; \therefore h_3H \in H \
        &amp;amp; g_1H = g_2h_3H = g_2H \
        &amp;amp; \text{两个陪集完全相等。}
        \end{aligned}
    $$
        代码：
        \begin{aligned}
        &amp;amp; \text{不失一般性的设某个子群的2个陪集分别是：}g_1H, g_2H \
        &amp;amp; \because g_1H, g_2H\text{之间存在交集，不失一般性的设两个陪集之间存在一个公共元素为}g_1h_1 = g_2h_2 \
        &amp;amp; \Rightarrow g_1 = g_2h_2h_1^{-1} \
        &amp;amp; \text{令：}h_3 = h_2h_1^{-1} \
        &amp;amp; g_1H = g_2h_3H \
        &amp;amp; \because \text{群的封闭性} \
        &amp;amp; \therefore h_3H \in H \
        &amp;amp; g_1H = g_2h_3H = g_2H \
        &amp;amp; \text{两个陪集完全相等。}
        \end{aligned}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据表，没有具体含义：
    $$
    \begin{matrix}
    a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \
    a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \
    \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \
    a_{n1} &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn}
    \end{matrix}
    $$&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;代码：
\&lt;span class="nv"&gt;begin&lt;/span&gt;{&lt;span class="nv"&gt;matrix&lt;/span&gt;}
&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="mi"&gt;11&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="mi"&gt;12&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;cdots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;\\
&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="mi"&gt;21&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="mi"&gt;22&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;cdots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;\\
\&lt;span class="nv"&gt;vdots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;vdots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;ddots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;vdots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\\
&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="nv"&gt;n1&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="nv"&gt;n2&lt;/span&gt;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;cdots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a_&lt;/span&gt;{&lt;span class="nv"&gt;nn&lt;/span&gt;}
\&lt;span class="k"&gt;end&lt;/span&gt;{&lt;span class="nv"&gt;matrix&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;注意在{array}后面有个{l}是必须的。
$$
\begin{array}{l}
a &amp;amp; b \
c &amp;amp; d
\end{array}
$$
    代码：
        \begin{array}{l}
        a &amp;amp; b \
        c &amp;amp; d
        \end{array}&lt;/li&gt;
&lt;li&gt;行列式：
$$
\boldsymbol{D}=\begin{vmatrix}
    a_{11} &amp;amp; \cdots &amp;amp; a_{1k} &amp;amp;   &amp;amp;   &amp;amp;   \
    \vdots &amp;amp;   &amp;amp; \vdots &amp;amp;   &amp;amp; 0 &amp;amp;   \
    a_{k1} &amp;amp; \cdots &amp;amp; a_{kk} &amp;amp;   &amp;amp;   &amp;amp;   \
    c_{11} &amp;amp; \cdots &amp;amp; c_{1k} &amp;amp; b_{11} &amp;amp; \cdots &amp;amp; b_{1n}\
    \vdots &amp;amp;   &amp;amp; \vdots &amp;amp; \vdots &amp;amp;  &amp;amp; \vdots\
    c_{n1} &amp;amp; \cdots &amp;amp; c_{nk} &amp;amp; b_{n1} &amp;amp; \cdots &amp;amp; b_{nn}
    \end{vmatrix}
$$
    代码：
    \boldsymbol{D}=\begin{vmatrix}
    a_{11} &amp;amp; \cdots &amp;amp; a_{1k} &amp;amp;   &amp;amp;   &amp;amp;   \
    \vdots &amp;amp;   &amp;amp; \vdots &amp;amp;   &amp;amp; 0 &amp;amp;   \
    a_{k1} &amp;amp; \cdots &amp;amp; a_{kk} &amp;amp;   &amp;amp;   &amp;amp;   \
    c_{11} &amp;amp; \cdots &amp;amp; c_{1k} &amp;amp; b_{11} &amp;amp; \cdots &amp;amp; b_{1n}\
    \vdots &amp;amp;   &amp;amp; \vdots &amp;amp; \vdots &amp;amp;  &amp;amp; \vdots\
    c_{n1} &amp;amp; \cdots &amp;amp; c_{nk} &amp;amp; b_{n1} &amp;amp; \cdots &amp;amp; b_{nn}
    \end{vmatrix}&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$\boldsymbol{D}=\begin{vmatrix}
    a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \
    \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \
    a^{'}&lt;em i2&gt;{i1} &amp;amp; a^{'}&lt;/em&gt; &amp;amp; \cdots &amp;amp; a^{'}&lt;em n1&gt;{in} \
    \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \
    a&lt;/em&gt; &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn}
    \end{vmatrix}
$$
    代码：
    \boldsymbol{D}=\begin{vmatrix}
    a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \
    \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \
    a^{'}&lt;em i2&gt;{i1} &amp;amp; a^{'}&lt;/em&gt; &amp;amp; \cdots &amp;amp; a^{'}&lt;em n1&gt;{in} \
    \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \
    a&lt;/em&gt; &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn}
    \end{vmatrix}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;矩阵：
    $$
    \boldsymbol{D}=
    \begin{bmatrix}
    a &amp;amp; b \
    c &amp;amp; d
    \end{bmatrix}
    $$
        代码：
            \boldsymbol{D}=
            \begin{bmatrix}
            a &amp;amp; b \
            c &amp;amp; d
            \end{bmatrix}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分段公式：
    $$
    L(Y,f(x))=
    \begin{cases}
    1, Y!=f(x) \
    0, Y = f(x)
    \end{cases}
    $$
        代码：
            L(Y,f(x))=
            \begin{cases}
            1, Y!=f(x) \
            0, Y = f(x)
            \end{cases}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多行公式，&lt;a href="https://blog.csdn.net/hu3350261/article/details/104902011"&gt;参考&lt;/a&gt;。&lt;strong&gt;注意这个equation是带编号的，如果不需要带编号的直接使用aligned就可以了&lt;/strong&gt;。：&lt;/p&gt;
&lt;p&gt;$$
\begin{equation}
\begin{aligned}
    &amp;amp;\dot{\boldsymbol{x}}=A \boldsymbol{x}+B \boldsymbol{u}
    , \quad 
    \boldsymbol{x}(0)=\boldsymbol{x}&lt;em 0&gt;{0}\
    &amp;amp;y=C x+D u
\end{aligned}
\end{equation}
$$
    代码:
    \begin{equation}
    \begin{aligned}
        &amp;amp;\dot{\boldsymbol{x}}=A \boldsymbol{x}+B \boldsymbol{u}
        , \quad 
        \boldsymbol{x}(0)=\boldsymbol{x}&lt;/em&gt;\
        &amp;amp;y=C x+D u
    \end{aligned}
    \end{equation}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带大括号的多行公式，&lt;a href="https://blog.csdn.net/yen_csdn/article/details/79966985"&gt;参考&lt;/a&gt;：
    $$
    L(Y,f(x))=
    \left{
    \begin{cases}
        1, Y!=f(x) \
        0, Y = f(x)
    \end{cases}
    \right.
    $$
        代码：
        L(Y,f(x))=
        \left{
        \begin{cases}
        1, Y!=f(x) \
        0, Y = f(x)
        \end{cases}
        \right.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;4. 多行公式&lt;/h2&gt;
&lt;h3&gt;4.1 参考&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;参考1&lt;a href="https://zhuanlan.zhihu.com/p/266061200"&gt;https://zhuanlan.zhihu.com/p/266061200&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4.2 array用法&lt;/h3&gt;
&lt;h3&gt;4.2.1 array使用说明&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;组成公式最好使用aligned，array用来排矩阵比较合适&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;array需要搭配参数才能正常显示公式&lt;/strong&gt;。l-代表left（左对齐）、r-代表right(右对齐）、c-代表center(居中对齐）。而空花括号对应的是默认对齐方式--左对齐。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;4.2.2 array示例&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;简单示例
   $$
    \begin{array}{l}
        a + b = 1 \
        c + d + e = 2
    \end{array}
   $$
        代码：
        \begin{array}{l}
            a + b = 1 \
            c + d + e = 2
        \end{array}&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$
    \begin{array}{r}
        a + b = 1 \
        c + d + e = 2
    \end{array}
   $$
        代码：
        \begin{array}{r}
            a + b = 1 \
            c + d + e = 2
        \end{array}&lt;/p&gt;
&lt;h3&gt;4.3 align/aligned用法&lt;/h3&gt;
&lt;h4&gt;4.3.1. 说明&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;排公式还是用aligned最合适&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;我们最为推荐的是align环境(也可以写成aligned）。&lt;strong&gt;align和aligned的区别在于align中的每行公式都有编号，aligned中的每行公式没有编号&lt;/strong&gt;。一般常用aligned。&lt;/li&gt;
&lt;li&gt;&amp;amp;在aligned中就是控制对齐的位置。默认情况就是右对齐。详见简单示例1。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;4.3.2. 简单示例&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简单示例
    $$
    \begin{aligned}
        a + b = 1 \
        c + d + e = 2
    \end{aligned}
    $$
        代码：
        \begin{aligned}
            a + b = 1 \
            c + d + e = 2
        \end{aligned}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带左边大括号
    $$
    \left{\begin{aligned}
        a + b = 1 \
        c + d + e = 2
    \end{aligned}\right.
    $$
        代码：
        \left{\begin{aligned}
            a + b = 1 \
            c + d + e = 2
        \end{aligned}\right.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带两边大括号
    $$
    \left{\begin{aligned}
        a + b = x + y \
        c + d + e = z + w + u \
        f = v
    \end{aligned}\right{
    $$
        代码：
        \left{\begin{aligned}
            a + b &amp;amp;= x + y \
            c + d + e &amp;amp;= z + w + u \
            f &amp;amp;= v
        \end{aligned}\left{&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等号对齐
    $$
    \left{\begin{aligned}
        a + b &amp;amp;= x + y \
        c + d + e &amp;amp;= z + w + u \
        f &amp;amp;= v
    \end{aligned}\right.
    $$
        代码：
        \left{\begin{aligned}
            a + b &amp;amp;= x + y \
            c + d + e &amp;amp;= z + w + u \
            f &amp;amp;= v
        \end{aligned}\right.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;控制对齐位置
    $$
    \left{\begin{aligned}
        &amp;amp; a + b &amp;amp;= &amp;amp;x + y \
        &amp;amp; c + d + e &amp;amp;= &amp;amp;z + w + u \
        &amp;amp; f &amp;amp;= &amp;amp;v
    \end{aligned}\right.
    $$
        代码：
        \left{\begin{aligned}
            &amp;amp; a + b &amp;amp;= &amp;amp;x + y \
            &amp;amp; c + d + e &amp;amp;= &amp;amp;z + w + u \
            &amp;amp; f &amp;amp;= &amp;amp;v
        \end{aligned}\right.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加公式备注。注意在参考1中的说明与实践操作对应不上。align还是会在备注之后添加序号，aligned会和参考中的说明一致。
    $$
    \left{\begin{aligned}
        &amp;amp; a + b &amp;amp;= &amp;amp;x + y &amp;amp;&amp;amp; 第一个公式\
        &amp;amp; c + d + e &amp;amp;= &amp;amp;z + w + u &amp;amp;&amp;amp; 第二个公式 \
        &amp;amp; f &amp;amp;= &amp;amp;v &amp;amp;&amp;amp; 第三个公式
    \end{aligned}\right.
    $$
        代码：
        \left{\begin{aligned}
            &amp;amp; a + b &amp;amp;= &amp;amp;x + y &amp;amp;&amp;amp; 第一个公式\
            &amp;amp; c + d + e &amp;amp;= &amp;amp;z + w + u &amp;amp;&amp;amp; 第二个公式 \
            &amp;amp; f &amp;amp;= &amp;amp;v &amp;amp;&amp;amp; 第三个公式
        \end{aligned}\right.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Commonknowledge"></category><category term="blog"></category><category term="LaTex"></category></entry></feed>